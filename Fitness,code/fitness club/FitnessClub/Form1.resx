<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3///79///+/f///v3///97////A/////////////
</value>
  </data>
</root>